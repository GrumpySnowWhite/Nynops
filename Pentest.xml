<?xml version="1.0"?>

<pentest
xsi:schemaLocation="NynopsSchema.xsd">
	<finding>
		<id>NYN001-XSS</id>
		<title>Cross Site Scripting (XSS)</title>
		<rating>
			<likelyhood>C</likelyhood>
			<impact>C</impact>
			<risk>C</risk>
		</rating>
		<description>
			Cross-Site Scripting (XSS) attacks occur when data is entered in a web application and there are no proper input validation and output encoding mechanisms in place. The data is usually of a malicious nature and usually makes use of, but are not limited to, JavaScript code. There are two types of XSS attacks possible:

			Stored XSS Attacks
			Stored attacks are those where the injected script is permanently stored on the target servers, such as in a database, in a message forum, visitor log, comment field, etc. 

			Reflected XSS Attacks
			Reflected attacks are those where the injected script is reflected off the web server, such as in an error message, search result, or any other response that includes some or all of the input sent to the server as part of the request. 
		</description>
		<causes>
			* Software Architecture
			* Software Development
		</causes>
		<remediation>
			Whenever user input is possible the input should be validated and the output should be encoded. In the links below you will find more information on how to properly implement these mitigations.  Besides implementing the proper encoding a validation check you can also add the HTTPOnly cookie flag and implement CSP headers.
		</remediation>
		<references>
			https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)
			https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet

		</references>
	</finding>
</pentest>